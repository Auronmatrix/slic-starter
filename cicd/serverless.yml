service: ${self:custom.serviceName}

provider:
  name: aws
  runtime: ${self:custom.runtime}
  stage: ${self:custom.stage}
  region: ${self:custom.region}

custom: ${file(./custom.yml)}

resources:
  Resources:
    artifactsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.buildBucket}

    artifactsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: artifactsBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:DeleteObject
                - s3:GetBucket*
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:ListBucket
                - s3:PutObject
                - s3:GetBucketPolicy
              Resource:
                - arn:aws:s3:::${self:custom.buildBucket}
                - arn:aws:s3:::${self:custom.buildBucket}/*
              Principal:
                AWS: ${self:custom.accountIds.dev}

    codePipelineRole: ${file(./codepipeline-role.yml)}

    codeBuildRole: ${file(./codebuild-role.yml)}

    pipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        Name: ${self:custom.stage}-slic-codepipeline
        RoleArn: { Fn::GetAtt: [codePipelineRole, Arn] }
        Stages:
          - Name: Source
            Actions:
              - Name: SourceAction
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: 1
                RunOrder: 1
                Configuration:
                  Owner: ${self:custom.sourceRepoOwner}
                  Repo: ${self:custom.sourceRepoName}
                  Branch: master
                  OAuthToken: '{{resolve:secretsmanager:CICD:SecretString:GitHubPersonalAccessToken}}'
                  PollForSourceChanges: true
                OutputArtifacts:
                  - Name: ${self:custom.stage}-slic-service-source
          - Name: InstallDeps
            Actions:
              - Name: InstallDeps
                InputArtifacts:
                  - Name: ${self:custom.stage}-slic-service-source
                OutputArtifacts:
                  - Name: ${self:custom.stage}-slic-service-installed-deps
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: slic-codebuild-install-deps
                RunOrder: 1
          - Name: DeployBackend
            Actions:
              - Name: DeployBackend
                InputArtifacts:
                  - Name: ${self:custom.stage}-slic-service-installed-deps
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: slic-codebuild-deploy-backend
                RunOrder: 1
          - Name: DeployFrontend
            Actions:
              - Name: DeployFrontend
                InputArtifacts:
                  - Name: ${self:custom.stage}-slic-service-installed-deps
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: slic-codebuild-deploy-frontend
                RunOrder: 1
        ArtifactStore:
          Type: S3
          Location: ${self:custom.buildBucket}

    codebuildInstallDepsProject:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: slic-codebuild-install-deps
        ServiceRole: { Fn::GetAtt: [codeBuildRole, Arn] }
        Source:
          Type: CODEPIPELINE
          BuildSpec: ${file(./buildspec-install-deps.yml.js)}
        Artifacts:
          Type: CODEPIPELINE
          Packaging: NONE
        Environment: ${file(./codebuild-environment.yml)}

    codebuildDeployBackend:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: slic-codebuild-deploy-backend
        ServiceRole: { Fn::GetAtt: [codeBuildRole, Arn] }
        Source:
          Type: CODEPIPELINE
          BuildSpec: ${file(./buildspec-deploy-backend.yml.js)}
        Artifacts:
          Type: CODEPIPELINE
          Packaging: NONE
        Environment: ${file(./codebuild-environment.yml)}

    codebuildDeployFrontend:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: slic-codebuild-deploy-frontend
        ServiceRole: { Fn::GetAtt: [codeBuildRole, Arn] }
        Source:
          Type: CODEPIPELINE
          BuildSpec: ${file(./buildspec-deploy-frontend.yml.js)}
        Artifacts:
          Type: CODEPIPELINE
          Packaging: NONE
        Environment: ${file(./codebuild-environment.yml)}
