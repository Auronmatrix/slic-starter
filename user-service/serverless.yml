service: user-service

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-pseudo-parameters
  - serverless-log-forwarding

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'local'}
  region: ${opt:region, '${self:custom.defaultRegions.${self:provider.stage}}'}
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements: ${file(./sls-iam-role-statements.yml)}
  environment:
    SLIC_STAGE: ${self:provider.stage}
  resourcePolicy:
    - Effect: Allow
      Principal: '*'
      Action: 'execute-api:Invoke'
      Resource:
        - execute-api:/*/*/*
  logs:
    restApi: true

custom:
  stage: ${opt:stage, 'dev'}
  defaultRegions: ${file(../common-config.json):defaultRegions}
  serverless-offline:
    port: 4003
    stage: local
    region: ${self:custom.defaultRegions.${self:provider.stage}}
    noAuth: true
  prune:
    automatic: true
    number: 3
  logForwarding:
    destinationARN: !ImportValue ${self:provider.stage}-log-forwarder-function-arn

functions: ${file(./sls-functions.yml)}

resources:
  Outputs:
    userPool:
      Value: !Ref slicUserPool
      Export:
        Name: ${self:provider.stage}-user-pool-id
    userPoolClient:
      Value: !Ref slicUserPoolClient
      Export:
        Name: ${self:provider.stage}-user-pool-client-id
    identityPool:
      Value: !Ref slicIdentityPool
      Export:
        Name: ${self:provider.stage}-identity-pool
    slicUserPoolArn:
      Value: !Ref slicUserPoolArn
      Export:
        Name: ${self:provider.stage}-user-pool-arn

  Resources: ${file(./sls-resources.yml)}
